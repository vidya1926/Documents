
OOPs Concept
============
Inheritance 
Polymorphism

====================
OOPS-Object Oriented Programming Language

What OOPs?-Process to handle object

Object --real time entity
         --state and behaviour of the object
Class-template
Major 4 concepts/pillars/principles of the OOP
==================================
1.Inheritance-acquiring the features of parent to the child
2.Polymorphism-Many forms
3.Abstraction--model
4.Encapsulation-data hiding 

=================================
Inheritance:
========
   -acquring the feature of parent

--Acquiring the properties of super class by the subclass
-Easy Maintenance 
-Reusabilty 

Parent-superclass
Child->subClass

Keywords- extends

Types:
====
Single Inheritance
Multi-Level Inheritance
H‏irerchial Inheritance 
Multiple Inheritance
Hybird Inheritance


Single Inheritance--- >Parent ->child1                           

Multi-Level Inheritance

GrandFather-->Father-->Son

Hirerchial Inheritance

Parent--- child1
	-Child 2
	-child3


Multiple Inheritance
===============
-------It is not possible in java
------Because of Diamond Problem

Hybird Inheritance
=============
combination of all types of inheritance
Example in Selenium

Single inheritance
RemoteWebDriver -Parent Class

ChromeDriver extends RemoteWebDriver
EdgeDriver extends RemoteWebDriver

Multilevel
RemoteWebDriver ---->ChromiumDriver--->Chrome/edge driver

==================================================================================================
PolyMorphism
===========

----Taking Many forms


OverLoading -->CompileTimePolymorphism/Static binding
Overriding--->runtime polymorphism/Dynamic binding


OverLoading
==========-
 
---In a Same Class with the same Method name and having different arguments

SwitchTo().frame(index)
frame(String id/name)
frame(WebElement)

findElement

Java-Print method

===========================================
Method OverRiding-(is-A)
=============

Runtime polymorphism/dynamic binding

Same Method,same Arguments but in different classes


Works based on inheritance
it uses keyword--extends


Method Overriding:
===============

Create a class Laptop
Create a method as getSystemInfo 
   { 
print the systemInfo as windows10
}

Create an another class as PC which extends Laptop
Create a method as getSystemInfo 
{
print the systemInfo as MAC
}


Create main method to execute both the parent and child class methods


Examples

selenium: quit()
java: toString()

Super --Keyword
  ----to call the parent method which are overridden in your subclass

Classroom:1(Single Inheritance)
=========
     Class (without main method)       :Computer  
     Methods   :computerModel() and print statement

     Class        :Desktop
     Methods   :desktopSize()    

Description:

create above 2 class and call all your class methods into the Desktop using single inheritance.


classroom :2(Multi-level and hirerchial Inheritance)
==========
Class: Vehicle
Methods: applyBrake()
	soundHorn()
	engine()

Class: car extends Vehicle
Methods: automaticGearsystem()
	alloyWheel()

Class:Bike extends vehicle
Methods:discBreak()
	electricBike()


Class: Audi extends car
Method:openSunroof()

Class:BuyVehicle
Create object for Audi and call all the methods
Create Object for Bike and call all the methods

Assignment:1
==========

   Package   :org.college
     Class     :College
     Methods   :collegeName(),collegeCode(),collegeRank()

     Package   :org.department
     Class        :Department
     Methods   :deptName()
 
     Package   :org.student
     Class        :Student
     Methods   :studentName(),studentDept(),studentId()
  
Description:
create above 3 class and call all your class methods into the Student using multilevel inheritance.


Assignment:2(Overriding)
===========
 Class     :BankInfo
    Methods :saving(),fixed(),deposit()

     Class     :AxisBank
     Methods :deposit()

Description:
You have to override the method deposit in AxisBank and try to print parent class(Bank info) overridden method(deposit) also

Assignment:3 (OverLoading)
===========
Create a class: Calculator

Create a method add() with differnt arguments

add(int x, int y)
add(float x, float y)
add(long a, long b)
add(short c, int d)

Create main method and call the methods

=========================================================
Classroom
==========
Abstract class:
==========
Create an abstract class  College
create abstract method as infrastructure
create a normal method as courses
create a concrete class University and extend the abstract method 
Create object and  call all the methods of college

Classroom
=========
Create an interface called RBI -> openAccount(), provideDebitCard()
Create an implementation class SBI -> RBI. 
SBI should have a provideCreditCard()
Create a class called MyBank
- create object for SBI
- Create object for RBI









