OOPS Concepts:

Topic: INHERTANCE

Inheritance in Java
-------------------
Classroom 1:
Create 3 classes 
- Mobile (methods: sendMsg(),makeCall(),saveContact() 
- AndroidPhone (method: takeVideo)
- SmartPhone (method: connectWhatsApp)

Note:
- AndroidPhone extends Mobile (Single Level Inheritance)
- SmartPhone extends AndroidPhone ( Multilevel Inheritance)

Execution class:
- Create a class named MyPhone for execution ( must have a main method)
- First, Create an object for AndroidPhone and see what all methods can be accessed ( Single Level Inheritance)
- Then, Create object for SmartPhone class and see if you can call all the methods using this object ( Multilevel Inheritance)

Inheritance in Selenium
-----------------------
ChromiumDriver extends RemoteWebDriver				
ChromeDriver extends ChromiumDriver				
EdgeDriver extends ChromiumDriver				
SafariDriver extends RemoteWebDriver				
FireFoxDriver extends RemoteWebDriver				


POLYMORPHISM:
------------
Many forms of same entity


1. methodOverRiding/Dynamic binding/RunTime Polymorphism
2. methodOverloading/Static binding/compileTime polymorphism

1.methodOverRiding:

Audi - changeGear()- override

2. methodOverloading/Static binding/compileTime polymorphism:

Same name - different arguments/ diff num of args

we can implement method overloading in two different ways:
implementing two or more methods that have the same name but take different numbers of arguments
implementing two or more methods that have the same name but take arguments of different types



Topic: ABSTRACTION
 Abstraction is a process of hiding the implementation details 
 Showing only functionality to the user.

-- Interface ( 100% of abstraction)
-- Abstract Class (0-100 % of abstraction )

What is Interface?
- design/Plan ()


Abstract class : class without a body / no implementation
Concrete class : class with a body / implementation

1. Added Unimplemented methods inside the Interface
2. Type the Documentation (use /** - Enter)
3. Use the Keyword : implements 
4. All the unimplemnted methods of an Interface has to be 
   implemented in the implementation class 
   (ie. the class that implemnts that Interface)
5. The implementation class can have its own method in it too.
6. Object instantiation cannot be done for an Interface.
7. CLASS LEVEL MULTIPLE INHERITANCE IS NOT POSSIBLE
   INTERFACE LEVEL MULTIPLE INHERITANCE IS POSSIBLE
     ( do it with TWO INTERFACES)
8. Inheritence - extends
   A class can inherit and also implement, both at a time.









